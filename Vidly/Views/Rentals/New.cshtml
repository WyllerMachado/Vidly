@model dynamic

@{
    ViewBag.Title = "Alugar Filmes";
}

<h2>Alugar Filmes</h2>

<form id="newRental">
    @Html.ValidationSummary(true, "Por favor, preencha os campos necessários abaixo:")

    <div class="form-group">
        <label>Cliente</label>
        <div class="tt-container">
            <input id="customer" name="customer" data-rule-validCustomer="true" required type="text" value="" class="form-control"/>
        </div>
    </div>

    <div class="form-group">
        <label>Filme</label>
        <div class="tt-container">
            <input id="movie" name="movie" data-rule-atLeastOneMovie="true" type="text" value="" class="form-control"/>
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <ul id="movies" class="list-group"></ul>
        </div>
    </div>

    <button class="btn btn-primary" type="submit">Salvar</button>
</form>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {

            var vm = {
                customerId: 0,
                movieIds: []
            };

            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#customer').typeahead({
                minLength: 2,
                highlight: true
            }, {
                name: 'customers',
                display: 'name',
                source: customers
            }).on("typeahead:select", function(e, customer) {
                vm.customerId = customer.id;
            });


            var movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#movie').typeahead({
                minLength: 2,
                highlight: true
            }, {
                name: 'movies',
                display: 'name',
                source: movies
            }).on("typeahead:select", function (e, movie) {
                $("#movies").append("<li class='list-group-item'>" + movie.name + "</li>");

                $("#movie").typeahead("val", "");

                vm.movieIds.push(movie.id);
            });

            $.validator.addMethod("validCustomer", function() {
                return vm.customerId && vm.customerId !== 0;
            }, "Selecione um cliente válido.");

            $.validator.addMethod("atLeastOneMovie", function () {
                return vm.movieIds.length > 0;
            }, "Selecione pelo menos um filme.");

            $("#newRental").validate({
                submitHandler: function (e) {
                    $.ajax({
                        url: "/api/newRentals",
                        method: "post",
                        data: vm
                    })
                    .done(function () {
                        toastr.success("Aluguéis salvos com sucesso.");
                    })
                    .fail(function () {
                        toastr.error("Algo inesperado aconteceu.");
                    });

                    return false;
                }
            });
        });

    </script>
}